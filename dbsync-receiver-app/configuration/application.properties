########################################################################################################################
#                                                                                                                      #
# This file provides a configuration template for the DB sync receiver application, it contains in-line documentation  #
# for each property. For the spring core properties, please refer to the spring boot docs for more details.            #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** DB sync receiver properties ******************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# The interval in milliseconds between polls of the retry queue by the retry route
inbound.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
inbound.retry.initial.delay=120000
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port, the H2 database console is exposed at this port
server.port=8082
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Webapp Configuration *****************************************************************
#
# The purpose of this config is so that the receiver sync app can make a rest call to trigger search index rebuild
# it processes a payload for an indexed entity e.g. person_name, person_attribute, patient_identifier etc.
# It's highly recommended that you create a specific user account for use here
#
# The base URL to the receiving OpenMRS webapp
openmrs.baseUrl=

# The username for the account to use to log into the receiver OpenMRS instance
openmrs.username=

# The password for the account to use to log into the receiver OpenMRS instance
openmrs.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** H2 configuration *****************************************************************************
#
# Whether to enable the console
spring.h2.console.enabled=true

# Path at which the console is available, defaults to /h2-console
# spring.h2.console.path=
# ----------------------------------------------------------------------------------------------------------------------

# *********************** Configuration of the openMRS database to write to *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ---------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.jdbc.Driver

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=org.h2.Driver

# Dialect of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.dialect=org.hibernate.dialect.H2Dialect

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=jdbc:h2:file:${eip.home}${file.separator}db${file.separator}receiver${file.separator}openmrs_eip_mgt

# User name of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** ActiveMQ configuration ***********************************************************************
#
# Broker URL of the Artemis MQ broker shared with the receiver (SHOULD include the protocol e.g. tcp://192.168.1.2:61616)
spring.artemis.brokerUrl=
#
# User name of the Artemis broker
spring.artemis.user=
#
# Password of the Artemis broker
spring.artemis.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to read from inbound DB sync payloads ****************
# Use either one of the following confs. JMS endpoint if activeMQ is configured or file endpoint for TESTING purposes
# Camel JMS Endpoint e.g. activemq:topic:<topic-name> or FILE Endpoint e.g. file:<folderPath> Should be absolute path
camel.input.endpoint=activemq:topic:openmrs.sync.topic?subscriptionDurable=true&durableSubscriptionName=DB-SYNC-RECEIVER&connectionFactory=activeMqConnFactory
activemq.clientId=DB-SYNC-REC
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Complex obs data sync configuration ***************************************************************
#
# Folder path where to write complex obs data files, should be the OpenMRS complex obs data directory
openmrs.complex.obs.data.directory=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** PGP configuration if encryption is necessary (OPTIONAL) **************************************
#
# Enables data encryption of incoming DB sync data, set to true if the sender application encrypts messages
openmrs.eip.dbsync.encryption.enabled=false

# Path where the keys are located
pgp.receiver.keysFolderPath=

# Password of the PGP receiver key pair
pgp.receiver.password=
# ----------------------------------------------------------------------------------------------------------------------