########################################################################################################################
#                                                                                                                      #
# This file provides a template for core configuration properties for the DB sync sender application, it contains      #
# in-line documentation for each property. For the spring core properties, please refer to the spring boot docs for    #
# more details.                                                                                                        #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** General EIP sender properties ****************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# The unique identifier assigned to the OpenMRS instance associated to this application
# This should be obtained from the receiving instance
db-sync.senderId=Remote-1

# Camel endpoints that need to be notified of DB events
db-event.destinations=out-bound-db-sync

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=120000
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
logging.level.out-bound-logger=${openmrs.eip.log.level}
logging.level.outbound-complex-obs-sync=${openmrs.eip.log.level}
logging.level.outbound-error-handler=${openmrs.eip.log.level}
logging.level.db-event-processor=${openmrs.eip.log.level}
logging.level.out-bound-db-sync=${openmrs.eip.log.level}
logging.level.debezium=${openmrs.eip.log.level}
logging.level.sender-retry=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port, the H2 database console is exposed at this port
server.port=8081
# ----------------------------------------------------------------------------------------------------------------------


# *********************** H2 configuration *****************************************************************************
#
# Whether to enable the console
spring.h2.console.enabled=true

# Path at which the console is available, defaults to /h2-console
# spring.h2.console.path=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Sender camel routes location *****************************************************************
#
# Location of the Camel routes xml files
camel.springboot.xmlRoutes=file:routes/*.xml
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.jdbc.Driver

# Dialect of the openMRS datasource (should not be changed in a usual use)
spring.openmrs-datasource.dialect=org.hibernate.dialect.MySQLDialect

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=org.h2.Driver

# Dialect of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.dialect=org.hibernate.dialect.H2Dialect

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=jdbc:h2:file:${eip.home}/db/sender/openmrs_eip_mgt

# User name of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of these properties, please refer to
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-connector-properties
#
# Maps to the connector property named database.server.id, MUST match the server-id value in your my.cnf file when you
# enabled mysql binlog, DO NOT change after setting it
debezium.db.serverId=

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/connectors/mysql.html#setting-up-mysql
debezium.db.user=

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=initial

# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=${eip.home}${file.separator}.debezium/offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=${eip.home}${file.separator}.debezium/dbhistory.txt
# ----------------------------------------------------------------------------------------------------------------------


# *********************** ActiveMQ configuration ***********************************************************************
#
# IP address or host name of the Artemis MQ broker shared with the receiver
spring.artemis.host=
#
# Artemis broker port
spring.artemis.port=
#
# User name of the Artemis broker
spring.artemis.user=
#
# Password of the Artemis broker
spring.artemis.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to send out bound DB sync events *********************
#
# Use either one of the following confs. JMS endpoint if ArtemisMQ is configured or file endpoint, note that file
# endpoint is ONLY for TESTING purposes
# Camel JMS Endpoint e.g. activemq:topic:<topic-name> or FILE Endpoint e.g. file:<folderPath> Should be absolute path
camel.output.endpoint=activemq:topic:openmrs.sync.topic
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Complex obs sync configuration ***************************************************************
#
# Folder path where to locate complex obs data files to be synced, should be the OpenMRS complex obs data directory
camel.output.endpoint.complex.obs.data.directory=
# ----------------------------------------------------------------------------------------------------------------------

# *********************** PGP configuration if encryption is necessary (OPTIONAL) **************************************
#
# Enables data encryption of outgoing DB sync data, if true the receiver should be configured to decrypt messages
openmrs.eip.dbsync.encryption.enabled=false

# Path where the keys are located
pgp.sender.keysFolderPath=

# User name of the PGP sender key pair
pgp.sender.userId=

# Password of the PGP receiver key pair
pgp.sender.password=

# User name of the PGP receiver key pair
pgp.sender.receiverUserId=
# ----------------------------------------------------------------------------------------------------------------------