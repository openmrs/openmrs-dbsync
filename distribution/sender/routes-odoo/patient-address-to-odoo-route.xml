<routes xmlns="http://camel.apache.org/schema/spring">
  <route id="person-address-to-odoo" errorHandlerRef="deadLetterChannelBuilder">
    <from uri="direct:person-address-to-odoo"/>
    <!--Extract person uuid from model and set it in a property-->
    <setProperty propertyName="openmrs-person-uuid">
      <method beanType="org.openmrs.eip.component.utils.ModelUtils" method="extractUuid(${body}, personUuid)"/>
    </setProperty>
    <choice>
      <when>
        <!--Select only patients-->
        <method ref="patientRepository" method="isPatientInGivenWorkflowState(${property.openmrs-person-uuid}, {{odoo.syncable-patient-states}})"/>
        <!--Get Odoo ID from mapping tables and set in property-->
        <setHeader headerName="property-name">
          <constant>odoo-person-id</constant>
        </setHeader>
        <enrich strategyRef="setOdooIdToPropertyAggregationStrategy">
          <simple>sql:select o.odoo_id as `odoo-person-id` from odoo_openmrs_id_mapping o where o.patient_uuid='${property.openmrs-person-uuid}'?dataSource=#mngtDataSource</simple>
        </enrich>
        <!--Put address1, address2, cityVillage, postalCode and country in array-->
        <transform>
          <jsonpath>$.model.address.['address1','address2','cityVillage','postalCode','country']</jsonpath>
        </transform>
        <transform>
          <jsonpath>$.[*]</jsonpath>
        </transform>
        <choice>
          <when>
            <simple>${body[4]} != null</simple>
            <to uri="direct:get-country-from-odoo"/>
          </when>
        </choice>
        <transform>
          <simple>street=${body[0]}&amp;street2=${body[1]}&amp;city=${body[2]}&amp;zip=${body[3]}&amp;country_id=${body[4]}</simple>
        </transform>
        <!--If the odoo person id is null, the partner is created with the '[Unknown]' name-->
        <choice>
          <when>
            <simple>${property.odoo-person-id} == null</simple>
            <transform>
              <simple>name=[Unknown]&amp;${body}</simple>
            </transform>
          </when>
        </choice>
        <setBody>
          <simple>{"endpoint":"res.partner","url":"${body}"}</simple>
        </setBody>
        <unmarshal>
          <json library="Jackson"/>
        </unmarshal>
        <log message="${body}"/>
        <to uri="direct:odoo-route"/>
      </when>
    </choice>
  </route>
</routes>
