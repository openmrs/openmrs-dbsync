<routes xmlns="http://camel.apache.org/schema/spring">
  <route id="process-workorder-state" errorHandlerRef="deadLetterChannelBuilder">
    <from uri="direct:process-workorder-state"/>
    <!--Get user in Odoo from username If user name not fount in Odoo defaults to admin -->
    <setBody>
      <simple>${null}</simple>
    </setBody>
    <toD uri="{{odoo.url}}/api/res.users?domain=[('login','=','${property.creator-username}')]&amp;httpClient.cookiePolicy=ignoreCookies" />
    <!--Convert body to string, because the http endpoint returns a CachedOutputStream-->
    <convertBodyTo type="java.lang.String"/>
    <choice>
      <when>
        <jsonpath>$.[?(@.count>0)]</jsonpath>
        <setProperty propertyName="user-id">
          <jsonpath>$.data[0].id</jsonpath>
        </setProperty>
      </when>
      <otherwise>
        <throwException exceptionType="java.lang.IllegalArgumentException" message="OpenMRS user not found in Odoo: ${property.user-id}"/>
      </otherwise>
    </choice>
    <!--Get work order corresponding to given manufacturing order -->
    <toD uri="{{odoo.url}}/api/mrp.workorder?domain=[('production_id','=','${property.manufacturing-order-id}')]&amp;httpClient.cookiePolicy=ignoreCookies"/>
    <transform>
      <jsonpath>$.data</jsonpath>
    </transform>
    <convertBodyTo type="java.lang.String"/>
    <!--Marshall to java object-->
    <unmarshal>
      <json useList="true" library="Jackson" unmarshalTypeName="org.openmrs.utils.odoo.workordermanager.model.ErpWorkOrder"/>
    </unmarshal>
    <!--Process work order to sort them and return the changing work orders induced to keep consistency -->
    <process ref="workOrderStatusProcessor"/>
    <log message="Send action to odoo: ${body}"/>
    <!--Process each changing workorder -->
    <split streaming="true">
      <simple>${body}</simple>
      <setProperty propertyName="workorder-action">
        <simple>${body.getAction()}</simple>
      </setProperty>
      <setProperty propertyName="workorder-new-state">
        <simple>${body.getAction().getResultingWorkOrderState().getOdooValue()}</simple>
      </setProperty>
      <setProperty propertyName="workorder-name">
        <simple>${body.getWorkOrder().getName()}</simple>
      </setProperty>
      <setProperty propertyName="workorder-id">
        <simple>${body.getWorkOrder().getId()}</simple>
      </setProperty>
      <setProperty propertyName="workcenter-id">
        <simple>${body.getWorkOrder().getWorkCenterId()}</simple>
      </setProperty>
      <!--Get loss id-->
      <setBody>
        <simple>${null}</simple>
      </setBody>
      <to uri="{{odoo.url}}/api/mrp.workcenter.productivity.loss?domain=[('loss_id','=','productive')]&amp;httpClient.cookiePolicy=ignoreCookies"/>
      <setProperty propertyName="loss-id">
        <jsonpath>$.data[0].id</jsonpath>
      </setProperty>
      <choice>
        <when>
          <!--If action equals START-->
          <simple>${property.workorder-action} == 'START'</simple>
          <setHeader headerName="CamelHttpMethod">
            <constant>POST</constant>
          </setHeader>
          <setBody>
            <simple>${null}</simple>
          </setBody>
          <toD uri="{{odoo.url}}/api/mrp.workcenter.productivity?workorder_id=${property.workorder-id}&amp;workcenter_id=${property.workcenter-id}&amp;loss_id=${property.loss-id}&amp;date_start=${property.workorder-value-datetime}&amp;user_id=${property.user-id}&amp;httpClient.cookiePolicy=ignoreCookies"/>
        </when>
        <when>
          <!--If action equals PAUSE or CLOSE-->
          <simple>${property.workorder-action} == 'PAUSE' || ${property.workorder-action} == 'CLOSE'</simple>
          <setHeader headerName="CamelHttpMethod">
            <constant>GET</constant>
          </setHeader>
          <setBody>
            <simple>${null}</simple>
          </setBody>
          <!--Get the timeline associated to work order with no end date-->
          <toD uri="{{odoo.url}}/api/mrp.workcenter.productivity?domain=[('workorder_id','=',${property.workorder-id}),('date_end','=',False)]&amp;httpClient.cookiePolicy=ignoreCookies"/>
          <convertBodyTo type="java.lang.String"/>
          <choice>
            <when>
              <jsonpath>$.[?(@.count>=1)]</jsonpath>
              <log message="${body}"/>
              <transform>
                <jsonpath>$.data</jsonpath>
              </transform>
              <transform>
                <jsonpath>$.[0]</jsonpath>
              </transform>
              <transform>
                <jsonpath>$.id</jsonpath>
              </transform>
              <setProperty propertyName="time-id">
                <simple>${body}</simple>
              </setProperty>
              <setHeader headerName="CamelHttpMethod">
                <constant>PUT</constant>
              </setHeader>
              <setBody>
                <simple>${null}</simple>
              </setBody>
              <!--Set the end date of the time line-->
              <toD uri="{{odoo.url}}/api/mrp.workcenter.productivity/${property.time-id}?date_end=${property.workorder-value-datetime}&amp;httpClient.cookiePolicy=ignoreCookies"/>
            </when>
          </choice>
        </when>
        <when>
          <!--If action equals CANCEL-->
          <simple>${property.workorder-action} == 'CANCEL'</simple>
          <setHeader headerName="CamelHttpMethod">
            <constant>GET</constant>
          </setHeader>
          <setBody>
            <simple>${null}</simple>
          </setBody>
          <!--Get the time lines associated to the work order to delete them all-->
          <toD uri="{{odoo.url}}/api/mrp.workcenter.productivity?domain=[('workorder_id','=','${property.workorder-name}')]&amp;httpClient.cookiePolicy=ignoreCookies"/>
          <transform>
            <jsonpath>$.data</jsonpath>
          </transform>
          <split streaming="true">
            <jsonpath>$</jsonpath>
            <transform>
              <jsonpath>$.id</jsonpath>
            </transform>
            <setProperty propertyName="time-id">
              <simple>${body}</simple>
            </setProperty>
            <setHeader headerName="CamelHttpMethod">
              <constant>DELETE</constant>
            </setHeader>
            <setBody>
              <simple>${null}</simple>
            </setBody>
            <toD uri="{{odoo.url}}/api/mrp.workcenter.productivity/${property.time-id}?httpClient.cookiePolicy=ignoreCookies"/>
          </split>
        </when>
      </choice>
      <!--Send new state to Odoo-->
      <setHeader headerName="CamelHttpMethod">
        <constant>PUT</constant>
      </setHeader>
      <setBody>
        <simple>${null}</simple>
      </setBody>
      <toD uri="{{odoo.url}}/api/mrp.workorder/${property.workorder-id}?state=${property.workorder-new-state}&amp;httpClient.cookiePolicy=ignoreCookies"/>
    </split>
  </route>
</routes>
